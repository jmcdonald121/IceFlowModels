CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C                                                                      C
C     ***FLOW2.FORT***     **18-07-88**                                C
C                                                                      C
C     THIS IS A FORWARD ICE FLOW PROGRAM IN ONE DIMENSION.  THIS USES  C
C     THE FULL DIFFERENCING OF THE CONTINUITY EQUATION AS IN           C
C     ALLEY.FORT.  THIS IS CURRENTLY WORKING (AS BEST AS I KNOW) WITH  C
C     A CRUDE BOUNDARY CONDITION AT THE ICE DIVIDE.                    C
C                                                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION H(101),U(101),DH(101),D2H(101),
     1DIS(101),UNEW(101),DISNEW(101),
     2CHGTHK(101),OLDH(101),SLOPE(101)
      PARAMETER (BDOT=9.6D-09,A=5.2D-25,TB=0.1D06,N=3,
     1T=3.1536D07,RHO=1.D03,G=9.8,D=1.0D06,SECYR=3.1536D07,NX=10)
CCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCC
C ZERO ALL VARIABLES C
CCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCC
      DT=T
      DX=D/DBLE(NX)
      X=0.0D0
      TOL=2.0D0
      LIM=0
      ITEST=0
      SAVE=0.0D0
      CHGMAX=0.0D0
      U(1)=0.0D0
      DO 9 I=1,NX+1
      CHGTHK(I)=0.0D0
      U(I)=0.0D0
      H(I)=0.0D0
      DIS(I)=0.0D0
      UNEW(I)=0.0D0
      DISNEW(I)=0.0D0
      OLDH(I)=0.0D0
9     CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCC
C SET INITIAL CONDITIONS C
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCC
C SET UP INITIAL PROFILE
      DO 10 I=1,NX+1
      H(I)=DSQRT(2*TB/(RHO*G)*(D+2.0D0*DX/10.0D0-X))
C      H(I)=3615.0D0*(1.0D0-(X/(D+2.0D0*DX/10.0D0))**(4.0D0/3.0D0)
C     1)**(3.0D0/8.0D0)
      X=X+DX
      OLDH(I)=H(I)
10    CONTINUE
      BOTTOM=H(NX+1)
      C=-2.0D0*A*(RHO*G)**N/(N+2)
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCC
C PERFORM ITERATION      C
CCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCC
C---------ITERATION STATEMENT----------------------------------------C
50    IF(TOL.LE.1.0D-03.OR.LIM.GE.100000.OR.ITEST.NE.0) GOTO 100
      TOL=0.0D0
      LIM=LIM+1
C---------COMPUTE VELOCITIES-----------------------------------------C
      DO 20 I=1,NX+1
      OLDH(I)=H(I)
      IF(I.EQ.1) THEN
      U(1)=0.0D0
      ELSEIF(I.EQ.NX+1) THEN
      U(NX+1)=2.0D0*A*((-RHO*G*(H(NX-1)-4.0D0*H(NX)+3.0D0*H(NX+1))/
     1(2.0D0*DX))**N)*(H(NX+1)**(N+1))/(N+2)
      ELSE
      U(I)=2.0D0*A*((-RHO*G*(H(I+1)-H(I-1))/(2.0D0*DX))**N)*
     1(H(I)**(N+1))/(N+2)
      ENDIF
      UNEW(I)=U(I)*SECYR
      DISNEW(I)=U(I)*H(I)*(1.0D0)*SECYR
20    CONTINUE
C---------COMPUTE THICKNESSES----------------------------------------C
      DO 13 I=1,NX+1
C      DO 13 I=2,NX
      SAVE=H(I)
      IF(I.EQ.1) THEN
      H(1)=(-2.0D0*U(2)*OLDH(1)/(2.0D0*DX)+BDOT)*DT+OLDH(1)
      ELSEIF(I.EQ.NX+1) THEN
      H(NX+1)=BOTTOM
      ELSE
C      H(I)=((-U(I)*(OLDH(I+1)-OLDH(I-1))-OLDH(I)*(U(I+1)-U(I-1)))
C     1/(2.0D0*DX)+BDOT)*DT+OLDH(I)
      DH(I)=(OLDH(I+1)-OLDH(I-1))/(2.0D0*DX)
      D2H(I)=(OLDH(I+1)-2.0D0*OLDH(I)+OLDH(I-1))/(DX**2)
      H(I)=(-C*OLDH(I)**(N+1)*DH(I)**(N-1)*((N+2)*DH(I)**2+N*OLDH(I)
     1*D2H(I))+BDOT)*DT+OLDH(I)
      ENDIF
      CHGTHK(I)=H(I)-SAVE
      CHGMAX=DABS(CHGTHK(I))
      IF(TOL.LT.CHGMAX) TOL=CHGMAX
13    CONTINUE
C THIS IS A TAYLOR'S SERIES EXPANSION
C      H(1)=H(2)+DH(2)*DX+0.5D0*D2H(2)*DX**2
C---------TEST SECTION-----------------------------------------------C
      DO 21 I=1,NX+1
      IF(UNEW(I).LT.0.0D0.OR.UNEW(I).GT.2.0D03) ITEST=1
      IF(I.NE.NX+1.AND.(H(I)-H(I+1)).LT.0.0D0) ITEST=2
21    CONTINUE
      WRITE(0,902) LIM
      GOTO 50
100   CONTINUE
C---------COMPUTE VELOCITIES FOR OUTPUT------------------------------C
      DO 80 I=1,NX+1
      IF(I.EQ.1) THEN
      U(1)=0.0D0
      ELSEIF(I.EQ.NX+1) THEN
      U(NX+1)=2.0D0*A*((-RHO*G*(H(NX-1)-4.0D0*H(NX)+3.0D0*H(NX+1))/
     1(2.0D0*DX))**N)*(H(NX+1)**(N+1))/(N+2)
      ELSE
      U(I)=2.0D0*A*((-RHO*G*(H(I+1)-H(I-1))/(2.0D0*DX))**N)*
     1(H(I)**(N+1))/(N+2)
      ENDIF
      UNEW(I)=U(I)*SECYR
      DISNEW(I)=U(I)*H(I)*(1.0D0)*SECYR
80    CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCC
C WRITE THE OUTPUT       C
CCCCCCCCCCCCCCCCCCCCCCCCCC
      OPEN(2,FILE='FLOW2.DAT',STATUS='NEW')
      DO 14 I=1,NX+1
      WRITE(0,901) I,H(I),UNEW(I),DISNEW(I),CHGTHK(I)
      WRITE(2,901) I,H(I),UNEW(I),DISNEW(I),CHGTHK(I)
901   FORMAT(' ','I=',I3,3X,'H=',D15.7,5X,'U=',D15.7,5X,
     1'DISCHARGE=',D15.7,5X,'DELTHK=',D15.7)
14    CONTINUE
      WRITE(0,902) LIM
      WRITE(2,902) LIM
902   FORMAT(' ','THE NUMBER OF ITERATIONS =',I8)
      WRITE(0,77) ITEST
77    FORMAT(' ','ITEST= ',I3)
      STOP
      END

